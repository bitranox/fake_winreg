language: python
group: travis_latest
dist: bionic
sudo: true

env:
    global:
        # prefix before commands - used for wine, there the prefix is "wine"
        - cPREFIX=""
        # command to launch python interpreter (its different on macOs, there we need python3)
        - cPYTHON="python"
        # command to launch pip (its different on macOs, there we need pip3)
        - cPIP="python -m pip"
        # switch off wine fix me messages
        - WINEDEBUG=fixme-all

        # PYTEST
        - PYTEST_DO_TESTS="True" 

        # FLAKE8 tests
        - DO_FLAKE8_TESTS="True"

        # MYPY tests
        - MYPY_DO_TESTS="True"
        - MYPY_OPTIONS="--follow-imports=normal --ignore-missing-imports --implicit-reexport --install-types --no-warn-unused-ignores --non-interactive --strict"
        - MYPYPATH="./fake_winreg/3rd_party_stubs"

        # coverage
        - DO_COVERAGE="True"
        - DO_COVERAGE_UPLOAD_CODECOV="True"
        - DO_COVERAGE_UPLOAD_CODE_CLIMATE="True"

        # package name
        - PACKAGE_NAME="fake_winreg"
        # the registered CLI Command
        - CLI_COMMAND="fake_winreg"
        # the source file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_SOURCE="./.docs/README_template.rst"
        # the target file for rst_include (rebuild rst file includes)
        - RST_INCLUDE_TARGET="./README.rst"

        # secure environment variable
        - secure: "Brn05mzQaYs7JjEbAszepg3tC/wfmJAnda7okkD6SfWvzJa3Ov2gOEfqXNBmD+UO0EiV3txp2jACdkun8dbevmeEg8/hYG5nbBS/UUz9pByssWLZ69MvSBTLmHZkJ26/EmcaKgWXyzl/iEBIowSk8K67oPDx9bAQA2Av1PAIT2X9ie84fGYGTjl+IAoiSuedBgTX7a1FtZt6sHq78Nm6i8Zal9IHD5M4Iw8ZmnPmB7C0LOOWqImkFfcOFK9E3NlAxF27/O7V/O0dwe4h7gVk+wvhHI7NdtLl4aOE6Igvak7NYxcrd2wCRjmPV1LX10nr//vbq/7m7N2safUl7MRONwbAcOsCft8IwjZP16WYJvIMMb8byjJPPGa/DtGs09HHH0qj8sn/6rLwMzXOUGeJBv4eeLHxyr95a8IN9TL7ehfSu7q/j9UrZ5I7urjyH7zy65mBkAC5I0spUZgq9I6Ra4K42lNtRbbASxZcPfJ5UPMjEqic6CGwevfyenVMOKDkZ3kDVRb4XYBEO4Z+q3a1biYZJC5yASwbsLL633wQdpM1KoEGQ1LNG0EeOOLUWtUBP4oyLx9XSil1SNeyS8XXNWLul2H7mPrb+SSuIVNUTOF7BU/YopHOqiKR7Oh3MOlltOD5sqyVyCj8Cfd541AY4HovHBCDLzxj8ym7KsV7q1U="  # CC_TEST_REPORTER_ID.secret
        - secure: "YLRKDZA0zrvV+R0RJJocMZ4NMQ2eBxr1PD2alcmTnZ23grUwS6KCclEmI4+RhelOfAAbf3UHL4PW6bo+2rsDp8gbCs6RRUWbvc43E4YbTXZq8KUasB2rlh3URfelZ9Y0AGNw8YlWVw+f06/ZtQPNGupjRlXMDp3uELpM/fSeF1/+Ds09q74VVe+0GS/2gU0dOTcanOGxW+FzSplY90bwhVojB2PWrpI3QM2hzUTiSsy49QMK1QcvLsirPV8oPDDz9cgUobt4mBN/ELUhGSluwfaqEZkLgH5CKeuOwcgG/OAdafBfmnnbC3b7Uzq8Jw2EWn2NOAZA671LxPxLYuv5LMaeBQBY+1R8+foZEJd+jhJU6bP0/ohP/66d8kR5/vOWOmrrE7kk+B4TPNsMTHPGvtuOBP+4rR/OEhMy3CAGUmPUw28WdWvaXoYOpaLd4WWqE3A2/iXSJQW9qrdg64nBD4N2GyAwqKbSDYjEq2nGctGPh6DuUEhkzVFKOzul1loVP1YQ8WgphLd0iMdvR7Cm8aCDdyykdXthl8FKj9ouazQAe7coRUFoDk8txFtCA7CWs62yLIm8mS8UxIFoJ2yCOAEboJOvMi0Pn3TvibTNHhx/I8OCbeMC2QuIvAPy7u4YyZjf7AHZJAEO/7AmWUzjPU3+CnDH+gES+BeWjAhXiqU="  # PYPI_PASSWORD.secret



addons:
    apt:
        packages:
            - xvfb      # install xvfb virtual framebuffer - this we need for WINE
            - winbind   # needed for WINE

services:   			# start services
  - xvfb    			# is needed for WINE on headless installation

matrix:
    include:

    - os: windows
      if: true
      language: sh
      name: "Windows Python 3.9"

      # oddly a secure password under env: global: causes that choco fails
      # so we need to put the option : filter_secrets: false
      # this can be a security issue, check that You dont leak secrets here !
      filter_secrets: false
      before_install:
          - git clone https://github.com/bitranox/lib_bash.git /usr/local/lib_bash
          - chmod -R 0755 /usr/local/lib_bash
          - chmod -R +x /usr/local/lib_bash/*.sh
          - /usr/local/lib_bash/lib_retry.sh retry choco install python3
          - export PATH="/c/Python310:/c/Python310/Scripts:/c/Python39:/c/Python39/Scripts:/c/Python38:/c/Python38/Scripts:$PATH"
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="False"
          - export DEPLOY_WHEEL="False"
          - export DEPLOY_TEST="False"
          - export MYPY_DO_TESTS="True"


    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.6"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.7"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="False"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.8"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="True"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "3.9-dev"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "amd64"
      if: true
      language: python
      python: "pypy3"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="False"

    - os: linux
      arch: "ppc64le"
      if: tag IS present
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "s390x"
      if: tag IS present
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: linux
      arch: "arm64"
      if: tag IS present
      language: python
      python: "3.9"
      before_install:
          - export BUILD_DOCS="False"
          - export DEPLOY_SDIST="True"
          - export DEPLOY_WHEEL="True"
          - export BUILD_TEST="True"
          - export MYPY_DO_TESTS="True"

    - os: osx
      if: true
      language: sh
      name: "macOS 10.15.7"
      python: "3.8"
      osx_image: xcode12.2
      env:
        # on osx pip and python points to python 2.7 - therefore we have to use pip3 and python3 here
        - cPREFIX=""				# prefix before commands - used for wine, there the prefix is "wine"
        - cPYTHON="python3"			# command to launch python interpreter (its different on macOs, there we need python3)
        - cPIP="python3 -m pip"   	# command to launch pip (its different on macOs, there we need pip3)
        - export BUILD_DOCS="False"
        - export DEPLOY_SDIST="False"
        - export DEPLOY_WHEEL="False"
        - export DEPLOY_TEST="True"
        - export MYPY_DO_TESTS="True"


install:
    - ${cPIP} install lib_travis
    - log_util --colortest
    - lib_travis install

script:
    - BRANCH=$(lib_travis get_branch)
    - log_util --level=NOTICE --banner "working on branch ${BRANCH}"
    - lib_travis script

after_success:
    - lib_travis after_success
    - lib_travis deploy
    - ls -l ./dist

notifications:
  email:
    recipients:
        - bitranox@gmail.com
    # on_success default: change
    on_success: never
    on_failure: always
